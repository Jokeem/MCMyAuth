MCMyAuth - Custom Minecraft User Authentication
Copyright (C) 2011 Anton Pirogov
Licensed under the GPL version 3

----
Why MCMyAuth?

It is lightweight, easy to set up (on unix machines)
and provides an alternative login system independent
from www.minecraft.net for your personal server.
MCMyAuth only requires to add an entry to your hosts file
and needs no server side modding.

----
Why NOT MCMyAuth?

1. MCMyAuth depends on the usage of a modded Minecraft Launcher,
which allows to decide which authentication server to connect to
(that means, with that launcher a player can connect to any
MCMyAuth server with a provided address).

THIS MEANS IF YOU CAN NOT GET A MCMyAuth LAUNCHER, YOU CAN NOT USE THIS!
I can not provide you with the launcher I made.

BUT:
If you have some Java expertise, you can create your own launcher working
with MCMyAuth - all you have to do is change the login post from:

https://login.minecraft.net
to:
http://address of mcmyauth instance/login

the response from MCMyAuth is also only:
username:sessionId
instead of:
version:downloadticket:username:sessionId

Last thing to do is to redirect the client traffic from www.minecraft.net to this server (joinserver.jsp)
I've used the proxy source from Mineshafter and integrated it into the client to do this.

(see http://mc.kev009.com/Authentication for reference)

Of course, if you can mod the launcher, you could also write your own
authentication server. But I hope by using MCMyAuth you save some time.

2. This program handles just the basics and provides password
secured login for your users. You can not set skins or cloaks
and there is no password recovery system (admin can only delete
user from the file to let him register again)

----
Requirements: sinatra gem

----
Usage:
1. redirect www.minecraft.net to the server running this app in your hosts file.
   This is neccessary for the server to use this app instead of the official
   site without modding the minecraft_server.jar.

2. start the app with start.sh (before you might want to change some settings in config.rb)

3. run your server with online-mode=true

Now all authentication should run over your own authentication server (this app).
Your players can now login over the MCMyAuth launcher.

You can open localhost/users in your webbrowser to register accounts.
(If you have not modified the URL)

